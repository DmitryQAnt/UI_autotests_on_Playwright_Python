name: Run Automated Tests

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    # Tests running every day at 00:00 UTC
    - cron: "0 0 * * *"

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install allure-pytest  # Установка Allure pytest

      - name: Install Playwright browsers
        run: |
          playwright install

      - name: Install Allure CLI
        run: |
          curl -o allure.zip -L "https://repo1.maven.org/maven2/io/qameta/allure/allure-commandline/2.21.0/allure-commandline-2.21.0.zip"
          unzip allure.zip -d allure
          echo "$GITHUB_WORKSPACE/allure/allure-2.21.0/bin" >> $GITHUB_PATH

      - name: Run tests
        run: |
            pytest --alluredir=allure-results  # Запуск тестов и сохранение результатов в allure-results

      - name: Generate Allure report
        run: |
            if [ "${{ github.event_name }}" == "pull_request" ]; then
              allure generate allure-results --clean -o allure-report/tests-after-pull-request-${{ github.run_number }}
            else
              allure generate allure-results --clean -o allure-report/tests_run_at_$(date +'%Y-%m-%d_%H-%M-%S')
            fi
      - name: Upload Allure Report Artifact
        uses: actions/upload-artifact@v4  # Использование актуальной версии
        with:
          name: allure-report
          path: allure-report
